name: "Test code"

env:
  COLUMNS: 120

on:
  push:
    branches: ["master", "main"]
  pull_request:

jobs:
  pytest:
    name: "Pytest"
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    runs-on: "ubuntu-latest"
    env:
      OS: "ubuntu-latest"
      PYTHON: "${{ matrix.python-version }}"
    steps:
      - name: "‚§µÔ∏è Check out code from GitHub"
        uses: "actions/checkout@v4"
      - name: "üêç Set up Python ${{ matrix.python-version }}"
        uses: "actions/setup-python@v5"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "‚öôÔ∏è Install Poetry"
        uses: "abatilo/actions-poetry@v4.0.0"
        with:
          poetry-version: 1.5.1
      - name: "‚öôÔ∏è Install dependencies"
        run: "poetry install"
      - name: "üöÄ Run pytest with coverage"
        run: |
          poetry run pip install coverage
          poetry run coverage run --source=pytoyoda/ -m pytest
          poetry run coverage xml
      - name: "‚¨ÜÔ∏è Upload Coverage to Codecov"
        uses: "codecov/codecov-action@v5"
        with:
          token: "${{ secrets.CODECOV_TOKEN }}"
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          flags: "unittests"
          verbose: true
